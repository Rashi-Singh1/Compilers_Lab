Terminals unused in grammar

   QUES
   AND
   OR
   NOT
   BITNOT
   MORE
   LESS
   LESSEQUAL
   MOREEQUAL
   EQUAL
   NOTEQUAL
   DOT
   COLON
   null
   FALSE
   TRUE
   MAIN
   IF
   ELSE
   SWITCH
   CASE


State 1 conflicts: 1 shift/reduce
State 2 conflicts: 1 shift/reduce
State 34 conflicts: 2 reduce/reduce
State 41 conflicts: 5 shift/reduce
State 52 conflicts: 5 shift/reduce, 1 reduce/reduce
State 56 conflicts: 5 shift/reduce
State 58 conflicts: 1 reduce/reduce
State 65 conflicts: 5 shift/reduce
State 71 conflicts: 1 shift/reduce
State 79 conflicts: 5 shift/reduce
State 82 conflicts: 1 reduce/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: %empty
    2        | VAR PROGRAM
    3        | FUNC_DECLARATION PROGRAM
    4        | FUNC_DEFINITION PROGRAM

    5 VAR: INT MULTI_DECLARATION SEMI
    6    | FLOAT MULTI_DECLARATION SEMI

    7 MULTI_DECLARATION: DECLARATION COMMA MULTI_DECLARATION
    8                  | DECLARATION

    9 DECLARATION: %empty
   10            | ID ASSIGN TYPECAST ID
   11            | ID ASSIGN TYPECAST CONST_OR_ID

   12 TYPECAST: %empty
   13         | LP DATA_TYPE RP

   14 DATA_TYPE: VOID
   15          | INT
   16          | FLOAT

   17 FUNC_DECLARATION: DATA_TYPE ID LP PARAM_LIST_WITH_DATATYPE RP SEMI

   18 PARAM_LIST_WITH_DATATYPE: %empty
   19                         | PARAM_WITH_DATATYPE COMMA PARAM_LIST_WITH_DATATYPE
   20                         | PARAM_WITH_DATATYPE

   21 PARAM_WITH_DATATYPE: DATA_TYPE ID

   22 FUNC_DEFINITION: DATA_TYPE ID LP PARAM_LIST_WITH_DATATYPE RP CLP STMT_LIST CRP

   23 STMT_LIST: STMT STMT_LIST
   24          | STMT

   25 STMT: %empty
   26     | VAR
   27     | FUNC_CALL
   28     | LOOP

   29 FUNC_CALL: ID LP PARAM_LIST_WO_DATATYPE RP SEMI

   30 PARAM_LIST_WO_DATATYPE: %empty
   31                       | PARAM_WO_DATATYPE COMMA PARAM_LIST_WO_DATATYPE
   32                       | PARAM_WO_DATATYPE

   33 PARAM_WO_DATATYPE: %empty
   34                  | ID
   35                  | ID COMMA PARAM_WO_DATATYPE

   36 LOOP: FOR FORLOOP BODY
   37     | WHILE LP EXP RP BODY

   38 BODY: CLP STMT_LIST CRP
   39     | STMT

   40 FORLOOP: LP COMMA_SEP_INIT SEMI CONDITION SEMI COMMA_SEP_INCR RP

   41 COMMA_SEP_INIT: %empty
   42               | ID ASSIGN EXP COMMA COMMA_SEP_INIT
   43               | COMMA_SEP_DATATYPE_INIT

   44 COMMA_SEP_DATATYPE_INIT: ID ASSIGN EXP
   45                        | DATA_TYPE COMMA_SEP_INIT_PRIME

   46 COMMA_SEP_INIT_PRIME: ID ASSIGN EXP COMMA COMMA_SEP_INIT_PRIME
   47                     | ID ASSIGN EXP

   48 CONDITION: EXP

   49 COMMA_SEP_INCR: ADD ADD ID
   50               | MINUS MINUS ID
   51               | ID ADD ADD
   52               | ID MINUS MINUS
   53               | ID ASSIGN EXP
   54               | ID OTHER ASSIGN EXP

   55 OTHER: MOD
   56      | ADD
   57      | MINUS
   58      | MUL
   59      | DIV
   60      | BITAND
   61      | BITOR
   62      | BITXOR

   63 EXP: CONST_OR_ID

   64 CONST_OR_ID: ID
   65            | QUOTE ID QUOTE
   66            | NUM


Terminals, with rules where they appear

$end (0) 0
error (256)
RP (258) 13 17 22 29 37 40
LP (259) 13 17 22 29 37 40
CRP (260) 22 38
CLP (261) 22 38
ASSIGN (262) 10 11 42 44 46 47 53 54
ADD (263) 49 51 56
MINUS (264) 50 52 57
MUL (265) 58
DIV (266) 59
MOD (267) 55
QUES (268)
AND (269)
OR (270)
NOT (271)
BITAND (272) 60
BITOR (273) 61
BITNOT (274)
BITXOR (275) 62
COMMA (276) 7 19 31 35 42 46
MORE (277)
LESS (278)
LESSEQUAL (279)
MOREEQUAL (280)
EQUAL (281)
NOTEQUAL (282)
QUOTE (283) 65
DOT (284)
SEMI (285) 5 6 17 29 40
COLON (286)
null (287)
FALSE (288)
TRUE (289)
FOR (290) 36
WHILE (291) 37
INT (292) 5 15
FLOAT (293) 6 16
VOID (294) 14
MAIN (295)
IF (296)
ELSE (297)
SWITCH (298)
CASE (299)
NUM (300) 66
ID (301) 10 11 17 21 22 29 34 35 42 44 46 47 49 50 51 52 53 54 64 65


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
PROGRAM (48)
    on left: 1 2 3 4, on right: 0 2 3 4
VAR (49)
    on left: 5 6, on right: 2 26
MULTI_DECLARATION (50)
    on left: 7 8, on right: 5 6 7
DECLARATION (51)
    on left: 9 10 11, on right: 7 8
TYPECAST (52)
    on left: 12 13, on right: 10 11
DATA_TYPE (53)
    on left: 14 15 16, on right: 13 17 21 22 45
FUNC_DECLARATION (54)
    on left: 17, on right: 3
PARAM_LIST_WITH_DATATYPE (55)
    on left: 18 19 20, on right: 17 19 22
PARAM_WITH_DATATYPE (56)
    on left: 21, on right: 19 20
FUNC_DEFINITION (57)
    on left: 22, on right: 4
STMT_LIST (58)
    on left: 23 24, on right: 22 23 38
STMT (59)
    on left: 25 26 27 28, on right: 23 24 39
FUNC_CALL (60)
    on left: 29, on right: 27
PARAM_LIST_WO_DATATYPE (61)
    on left: 30 31 32, on right: 29 31
PARAM_WO_DATATYPE (62)
    on left: 33 34 35, on right: 31 32 35
LOOP (63)
    on left: 36 37, on right: 28
BODY (64)
    on left: 38 39, on right: 36 37
FORLOOP (65)
    on left: 40, on right: 36
COMMA_SEP_INIT (66)
    on left: 41 42 43, on right: 40 42
COMMA_SEP_DATATYPE_INIT (67)
    on left: 44 45, on right: 43
COMMA_SEP_INIT_PRIME (68)
    on left: 46 47, on right: 45 46
CONDITION (69)
    on left: 48, on right: 40
COMMA_SEP_INCR (70)
    on left: 49 50 51 52 53 54, on right: 40
OTHER (71)
    on left: 55 56 57 58 59 60 61 62, on right: 54
EXP (72)
    on left: 63, on right: 37 42 44 46 47 48 53 54
CONST_OR_ID (73)
    on left: 64 65 66, on right: 11 63


State 0

    0 $accept: . PROGRAM $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (PROGRAM)

    PROGRAM           go to state 4
    VAR               go to state 5
    DATA_TYPE         go to state 6
    FUNC_DECLARATION  go to state 7
    FUNC_DEFINITION   go to state 8


State 1

    5 VAR: INT . MULTI_DECLARATION SEMI
   15 DATA_TYPE: INT .

    ID  shift, and go to state 9

    ID        [reduce using rule 15 (DATA_TYPE)]
    $default  reduce using rule 9 (DECLARATION)

    MULTI_DECLARATION  go to state 10
    DECLARATION        go to state 11


State 2

    6 VAR: FLOAT . MULTI_DECLARATION SEMI
   16 DATA_TYPE: FLOAT .

    ID  shift, and go to state 9

    ID        [reduce using rule 16 (DATA_TYPE)]
    $default  reduce using rule 9 (DECLARATION)

    MULTI_DECLARATION  go to state 12
    DECLARATION        go to state 11


State 3

   14 DATA_TYPE: VOID .

    $default  reduce using rule 14 (DATA_TYPE)


State 4

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 13


State 5

    2 PROGRAM: VAR . PROGRAM

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (PROGRAM)

    PROGRAM           go to state 14
    VAR               go to state 5
    DATA_TYPE         go to state 6
    FUNC_DECLARATION  go to state 7
    FUNC_DEFINITION   go to state 8


State 6

   17 FUNC_DECLARATION: DATA_TYPE . ID LP PARAM_LIST_WITH_DATATYPE RP SEMI
   22 FUNC_DEFINITION: DATA_TYPE . ID LP PARAM_LIST_WITH_DATATYPE RP CLP STMT_LIST CRP

    ID  shift, and go to state 15


State 7

    3 PROGRAM: FUNC_DECLARATION . PROGRAM

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (PROGRAM)

    PROGRAM           go to state 16
    VAR               go to state 5
    DATA_TYPE         go to state 6
    FUNC_DECLARATION  go to state 7
    FUNC_DEFINITION   go to state 8


State 8

    4 PROGRAM: FUNC_DEFINITION . PROGRAM

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (PROGRAM)

    PROGRAM           go to state 17
    VAR               go to state 5
    DATA_TYPE         go to state 6
    FUNC_DECLARATION  go to state 7
    FUNC_DEFINITION   go to state 8


State 9

   10 DECLARATION: ID . ASSIGN TYPECAST ID
   11            | ID . ASSIGN TYPECAST CONST_OR_ID

    ASSIGN  shift, and go to state 18


State 10

    5 VAR: INT MULTI_DECLARATION . SEMI

    SEMI  shift, and go to state 19


State 11

    7 MULTI_DECLARATION: DECLARATION . COMMA MULTI_DECLARATION
    8                  | DECLARATION .

    COMMA  shift, and go to state 20

    $default  reduce using rule 8 (MULTI_DECLARATION)


State 12

    6 VAR: FLOAT MULTI_DECLARATION . SEMI

    SEMI  shift, and go to state 21


State 13

    0 $accept: PROGRAM $end .

    $default  accept


State 14

    2 PROGRAM: VAR PROGRAM .

    $default  reduce using rule 2 (PROGRAM)


State 15

   17 FUNC_DECLARATION: DATA_TYPE ID . LP PARAM_LIST_WITH_DATATYPE RP SEMI
   22 FUNC_DEFINITION: DATA_TYPE ID . LP PARAM_LIST_WITH_DATATYPE RP CLP STMT_LIST CRP

    LP  shift, and go to state 22


State 16

    3 PROGRAM: FUNC_DECLARATION PROGRAM .

    $default  reduce using rule 3 (PROGRAM)


State 17

    4 PROGRAM: FUNC_DEFINITION PROGRAM .

    $default  reduce using rule 4 (PROGRAM)


State 18

   10 DECLARATION: ID ASSIGN . TYPECAST ID
   11            | ID ASSIGN . TYPECAST CONST_OR_ID

    LP  shift, and go to state 23

    $default  reduce using rule 12 (TYPECAST)

    TYPECAST  go to state 24


State 19

    5 VAR: INT MULTI_DECLARATION SEMI .

    $default  reduce using rule 5 (VAR)


State 20

    7 MULTI_DECLARATION: DECLARATION COMMA . MULTI_DECLARATION

    ID  shift, and go to state 9

    $default  reduce using rule 9 (DECLARATION)

    MULTI_DECLARATION  go to state 25
    DECLARATION        go to state 11


State 21

    6 VAR: FLOAT MULTI_DECLARATION SEMI .

    $default  reduce using rule 6 (VAR)


State 22

   17 FUNC_DECLARATION: DATA_TYPE ID LP . PARAM_LIST_WITH_DATATYPE RP SEMI
   22 FUNC_DEFINITION: DATA_TYPE ID LP . PARAM_LIST_WITH_DATATYPE RP CLP STMT_LIST CRP

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    VOID   shift, and go to state 3

    $default  reduce using rule 18 (PARAM_LIST_WITH_DATATYPE)

    DATA_TYPE                 go to state 28
    PARAM_LIST_WITH_DATATYPE  go to state 29
    PARAM_WITH_DATATYPE       go to state 30


State 23

   13 TYPECAST: LP . DATA_TYPE RP

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    VOID   shift, and go to state 3

    DATA_TYPE  go to state 31


State 24

   10 DECLARATION: ID ASSIGN TYPECAST . ID
   11            | ID ASSIGN TYPECAST . CONST_OR_ID

    QUOTE  shift, and go to state 32
    NUM    shift, and go to state 33
    ID     shift, and go to state 34

    CONST_OR_ID  go to state 35


State 25

    7 MULTI_DECLARATION: DECLARATION COMMA MULTI_DECLARATION .

    $default  reduce using rule 7 (MULTI_DECLARATION)


State 26

   15 DATA_TYPE: INT .

    $default  reduce using rule 15 (DATA_TYPE)


State 27

   16 DATA_TYPE: FLOAT .

    $default  reduce using rule 16 (DATA_TYPE)


State 28

   21 PARAM_WITH_DATATYPE: DATA_TYPE . ID

    ID  shift, and go to state 36


State 29

   17 FUNC_DECLARATION: DATA_TYPE ID LP PARAM_LIST_WITH_DATATYPE . RP SEMI
   22 FUNC_DEFINITION: DATA_TYPE ID LP PARAM_LIST_WITH_DATATYPE . RP CLP STMT_LIST CRP

    RP  shift, and go to state 37


State 30

   19 PARAM_LIST_WITH_DATATYPE: PARAM_WITH_DATATYPE . COMMA PARAM_LIST_WITH_DATATYPE
   20                         | PARAM_WITH_DATATYPE .

    COMMA  shift, and go to state 38

    $default  reduce using rule 20 (PARAM_LIST_WITH_DATATYPE)


State 31

   13 TYPECAST: LP DATA_TYPE . RP

    RP  shift, and go to state 39


State 32

   65 CONST_OR_ID: QUOTE . ID QUOTE

    ID  shift, and go to state 40


State 33

   66 CONST_OR_ID: NUM .

    $default  reduce using rule 66 (CONST_OR_ID)


State 34

   10 DECLARATION: ID ASSIGN TYPECAST ID .
   64 CONST_OR_ID: ID .

    COMMA     reduce using rule 10 (DECLARATION)
    COMMA     [reduce using rule 64 (CONST_OR_ID)]
    SEMI      reduce using rule 10 (DECLARATION)
    SEMI      [reduce using rule 64 (CONST_OR_ID)]
    $default  reduce using rule 10 (DECLARATION)


State 35

   11 DECLARATION: ID ASSIGN TYPECAST CONST_OR_ID .

    $default  reduce using rule 11 (DECLARATION)


State 36

   21 PARAM_WITH_DATATYPE: DATA_TYPE ID .

    $default  reduce using rule 21 (PARAM_WITH_DATATYPE)


State 37

   17 FUNC_DECLARATION: DATA_TYPE ID LP PARAM_LIST_WITH_DATATYPE RP . SEMI
   22 FUNC_DEFINITION: DATA_TYPE ID LP PARAM_LIST_WITH_DATATYPE RP . CLP STMT_LIST CRP

    CLP   shift, and go to state 41
    SEMI  shift, and go to state 42


State 38

   19 PARAM_LIST_WITH_DATATYPE: PARAM_WITH_DATATYPE COMMA . PARAM_LIST_WITH_DATATYPE

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    VOID   shift, and go to state 3

    $default  reduce using rule 18 (PARAM_LIST_WITH_DATATYPE)

    DATA_TYPE                 go to state 28
    PARAM_LIST_WITH_DATATYPE  go to state 43
    PARAM_WITH_DATATYPE       go to state 30


State 39

   13 TYPECAST: LP DATA_TYPE RP .

    $default  reduce using rule 13 (TYPECAST)


State 40

   65 CONST_OR_ID: QUOTE ID . QUOTE

    QUOTE  shift, and go to state 44


State 41

   22 FUNC_DEFINITION: DATA_TYPE ID LP PARAM_LIST_WITH_DATATYPE RP CLP . STMT_LIST CRP

    FOR    shift, and go to state 45
    WHILE  shift, and go to state 46
    INT    shift, and go to state 47
    FLOAT  shift, and go to state 48
    ID     shift, and go to state 49

    FOR       [reduce using rule 25 (STMT)]
    WHILE     [reduce using rule 25 (STMT)]
    INT       [reduce using rule 25 (STMT)]
    FLOAT     [reduce using rule 25 (STMT)]
    ID        [reduce using rule 25 (STMT)]
    $default  reduce using rule 25 (STMT)

    VAR        go to state 50
    STMT_LIST  go to state 51
    STMT       go to state 52
    FUNC_CALL  go to state 53
    LOOP       go to state 54


State 42

   17 FUNC_DECLARATION: DATA_TYPE ID LP PARAM_LIST_WITH_DATATYPE RP SEMI .

    $default  reduce using rule 17 (FUNC_DECLARATION)


State 43

   19 PARAM_LIST_WITH_DATATYPE: PARAM_WITH_DATATYPE COMMA PARAM_LIST_WITH_DATATYPE .

    $default  reduce using rule 19 (PARAM_LIST_WITH_DATATYPE)


State 44

   65 CONST_OR_ID: QUOTE ID QUOTE .

    $default  reduce using rule 65 (CONST_OR_ID)


State 45

   36 LOOP: FOR . FORLOOP BODY

    LP  shift, and go to state 55

    FORLOOP  go to state 56


State 46

   37 LOOP: WHILE . LP EXP RP BODY

    LP  shift, and go to state 57


State 47

    5 VAR: INT . MULTI_DECLARATION SEMI

    ID  shift, and go to state 9

    $default  reduce using rule 9 (DECLARATION)

    MULTI_DECLARATION  go to state 10
    DECLARATION        go to state 11


State 48

    6 VAR: FLOAT . MULTI_DECLARATION SEMI

    ID  shift, and go to state 9

    $default  reduce using rule 9 (DECLARATION)

    MULTI_DECLARATION  go to state 12
    DECLARATION        go to state 11


State 49

   29 FUNC_CALL: ID . LP PARAM_LIST_WO_DATATYPE RP SEMI

    LP  shift, and go to state 58


State 50

   26 STMT: VAR .

    $default  reduce using rule 26 (STMT)


State 51

   22 FUNC_DEFINITION: DATA_TYPE ID LP PARAM_LIST_WITH_DATATYPE RP CLP STMT_LIST . CRP

    CRP  shift, and go to state 59


State 52

   23 STMT_LIST: STMT . STMT_LIST
   24          | STMT .

    FOR    shift, and go to state 45
    WHILE  shift, and go to state 46
    INT    shift, and go to state 47
    FLOAT  shift, and go to state 48
    ID     shift, and go to state 49

    CRP       reduce using rule 24 (STMT_LIST)
    CRP       [reduce using rule 25 (STMT)]
    FOR       [reduce using rule 25 (STMT)]
    WHILE     [reduce using rule 25 (STMT)]
    INT       [reduce using rule 25 (STMT)]
    FLOAT     [reduce using rule 25 (STMT)]
    ID        [reduce using rule 25 (STMT)]
    $default  reduce using rule 24 (STMT_LIST)

    VAR        go to state 50
    STMT_LIST  go to state 60
    STMT       go to state 52
    FUNC_CALL  go to state 53
    LOOP       go to state 54


State 53

   27 STMT: FUNC_CALL .

    $default  reduce using rule 27 (STMT)


State 54

   28 STMT: LOOP .

    $default  reduce using rule 28 (STMT)


State 55

   40 FORLOOP: LP . COMMA_SEP_INIT SEMI CONDITION SEMI COMMA_SEP_INCR RP

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    VOID   shift, and go to state 3
    ID     shift, and go to state 61

    $default  reduce using rule 41 (COMMA_SEP_INIT)

    DATA_TYPE                go to state 62
    COMMA_SEP_INIT           go to state 63
    COMMA_SEP_DATATYPE_INIT  go to state 64


State 56

   36 LOOP: FOR FORLOOP . BODY

    CLP    shift, and go to state 65
    FOR    shift, and go to state 45
    WHILE  shift, and go to state 46
    INT    shift, and go to state 47
    FLOAT  shift, and go to state 48
    ID     shift, and go to state 49

    FOR       [reduce using rule 25 (STMT)]
    WHILE     [reduce using rule 25 (STMT)]
    INT       [reduce using rule 25 (STMT)]
    FLOAT     [reduce using rule 25 (STMT)]
    ID        [reduce using rule 25 (STMT)]
    $default  reduce using rule 25 (STMT)

    VAR        go to state 50
    STMT       go to state 66
    FUNC_CALL  go to state 53
    LOOP       go to state 54
    BODY       go to state 67


State 57

   37 LOOP: WHILE LP . EXP RP BODY

    QUOTE  shift, and go to state 32
    NUM    shift, and go to state 33
    ID     shift, and go to state 68

    EXP          go to state 69
    CONST_OR_ID  go to state 70


State 58

   29 FUNC_CALL: ID LP . PARAM_LIST_WO_DATATYPE RP SEMI

    ID  shift, and go to state 71

    RP        reduce using rule 30 (PARAM_LIST_WO_DATATYPE)
    RP        [reduce using rule 33 (PARAM_WO_DATATYPE)]
    COMMA     reduce using rule 33 (PARAM_WO_DATATYPE)
    $default  reduce using rule 30 (PARAM_LIST_WO_DATATYPE)

    PARAM_LIST_WO_DATATYPE  go to state 72
    PARAM_WO_DATATYPE       go to state 73


State 59

   22 FUNC_DEFINITION: DATA_TYPE ID LP PARAM_LIST_WITH_DATATYPE RP CLP STMT_LIST CRP .

    $default  reduce using rule 22 (FUNC_DEFINITION)


State 60

   23 STMT_LIST: STMT STMT_LIST .

    $default  reduce using rule 23 (STMT_LIST)


State 61

   42 COMMA_SEP_INIT: ID . ASSIGN EXP COMMA COMMA_SEP_INIT
   44 COMMA_SEP_DATATYPE_INIT: ID . ASSIGN EXP

    ASSIGN  shift, and go to state 74


State 62

   45 COMMA_SEP_DATATYPE_INIT: DATA_TYPE . COMMA_SEP_INIT_PRIME

    ID  shift, and go to state 75

    COMMA_SEP_INIT_PRIME  go to state 76


State 63

   40 FORLOOP: LP COMMA_SEP_INIT . SEMI CONDITION SEMI COMMA_SEP_INCR RP

    SEMI  shift, and go to state 77


State 64

   43 COMMA_SEP_INIT: COMMA_SEP_DATATYPE_INIT .

    $default  reduce using rule 43 (COMMA_SEP_INIT)


State 65

   38 BODY: CLP . STMT_LIST CRP

    FOR    shift, and go to state 45
    WHILE  shift, and go to state 46
    INT    shift, and go to state 47
    FLOAT  shift, and go to state 48
    ID     shift, and go to state 49

    FOR       [reduce using rule 25 (STMT)]
    WHILE     [reduce using rule 25 (STMT)]
    INT       [reduce using rule 25 (STMT)]
    FLOAT     [reduce using rule 25 (STMT)]
    ID        [reduce using rule 25 (STMT)]
    $default  reduce using rule 25 (STMT)

    VAR        go to state 50
    STMT_LIST  go to state 78
    STMT       go to state 52
    FUNC_CALL  go to state 53
    LOOP       go to state 54


State 66

   39 BODY: STMT .

    $default  reduce using rule 39 (BODY)


State 67

   36 LOOP: FOR FORLOOP BODY .

    $default  reduce using rule 36 (LOOP)


State 68

   64 CONST_OR_ID: ID .

    $default  reduce using rule 64 (CONST_OR_ID)


State 69

   37 LOOP: WHILE LP EXP . RP BODY

    RP  shift, and go to state 79


State 70

   63 EXP: CONST_OR_ID .

    $default  reduce using rule 63 (EXP)


State 71

   34 PARAM_WO_DATATYPE: ID .
   35                  | ID . COMMA PARAM_WO_DATATYPE

    COMMA  shift, and go to state 80

    COMMA     [reduce using rule 34 (PARAM_WO_DATATYPE)]
    $default  reduce using rule 34 (PARAM_WO_DATATYPE)


State 72

   29 FUNC_CALL: ID LP PARAM_LIST_WO_DATATYPE . RP SEMI

    RP  shift, and go to state 81


State 73

   31 PARAM_LIST_WO_DATATYPE: PARAM_WO_DATATYPE . COMMA PARAM_LIST_WO_DATATYPE
   32                       | PARAM_WO_DATATYPE .

    COMMA  shift, and go to state 82

    $default  reduce using rule 32 (PARAM_LIST_WO_DATATYPE)


State 74

   42 COMMA_SEP_INIT: ID ASSIGN . EXP COMMA COMMA_SEP_INIT
   44 COMMA_SEP_DATATYPE_INIT: ID ASSIGN . EXP

    QUOTE  shift, and go to state 32
    NUM    shift, and go to state 33
    ID     shift, and go to state 68

    EXP          go to state 83
    CONST_OR_ID  go to state 70


State 75

   46 COMMA_SEP_INIT_PRIME: ID . ASSIGN EXP COMMA COMMA_SEP_INIT_PRIME
   47                     | ID . ASSIGN EXP

    ASSIGN  shift, and go to state 84


State 76

   45 COMMA_SEP_DATATYPE_INIT: DATA_TYPE COMMA_SEP_INIT_PRIME .

    $default  reduce using rule 45 (COMMA_SEP_DATATYPE_INIT)


State 77

   40 FORLOOP: LP COMMA_SEP_INIT SEMI . CONDITION SEMI COMMA_SEP_INCR RP

    QUOTE  shift, and go to state 32
    NUM    shift, and go to state 33
    ID     shift, and go to state 68

    CONDITION    go to state 85
    EXP          go to state 86
    CONST_OR_ID  go to state 70


State 78

   38 BODY: CLP STMT_LIST . CRP

    CRP  shift, and go to state 87


State 79

   37 LOOP: WHILE LP EXP RP . BODY

    CLP    shift, and go to state 65
    FOR    shift, and go to state 45
    WHILE  shift, and go to state 46
    INT    shift, and go to state 47
    FLOAT  shift, and go to state 48
    ID     shift, and go to state 49

    FOR       [reduce using rule 25 (STMT)]
    WHILE     [reduce using rule 25 (STMT)]
    INT       [reduce using rule 25 (STMT)]
    FLOAT     [reduce using rule 25 (STMT)]
    ID        [reduce using rule 25 (STMT)]
    $default  reduce using rule 25 (STMT)

    VAR        go to state 50
    STMT       go to state 66
    FUNC_CALL  go to state 53
    LOOP       go to state 54
    BODY       go to state 88


State 80

   35 PARAM_WO_DATATYPE: ID COMMA . PARAM_WO_DATATYPE

    ID  shift, and go to state 71

    $default  reduce using rule 33 (PARAM_WO_DATATYPE)

    PARAM_WO_DATATYPE  go to state 89


State 81

   29 FUNC_CALL: ID LP PARAM_LIST_WO_DATATYPE RP . SEMI

    SEMI  shift, and go to state 90


State 82

   31 PARAM_LIST_WO_DATATYPE: PARAM_WO_DATATYPE COMMA . PARAM_LIST_WO_DATATYPE

    ID  shift, and go to state 71

    RP        reduce using rule 30 (PARAM_LIST_WO_DATATYPE)
    RP        [reduce using rule 33 (PARAM_WO_DATATYPE)]
    COMMA     reduce using rule 33 (PARAM_WO_DATATYPE)
    $default  reduce using rule 30 (PARAM_LIST_WO_DATATYPE)

    PARAM_LIST_WO_DATATYPE  go to state 91
    PARAM_WO_DATATYPE       go to state 73


State 83

   42 COMMA_SEP_INIT: ID ASSIGN EXP . COMMA COMMA_SEP_INIT
   44 COMMA_SEP_DATATYPE_INIT: ID ASSIGN EXP .

    COMMA  shift, and go to state 92

    $default  reduce using rule 44 (COMMA_SEP_DATATYPE_INIT)


State 84

   46 COMMA_SEP_INIT_PRIME: ID ASSIGN . EXP COMMA COMMA_SEP_INIT_PRIME
   47                     | ID ASSIGN . EXP

    QUOTE  shift, and go to state 32
    NUM    shift, and go to state 33
    ID     shift, and go to state 68

    EXP          go to state 93
    CONST_OR_ID  go to state 70


State 85

   40 FORLOOP: LP COMMA_SEP_INIT SEMI CONDITION . SEMI COMMA_SEP_INCR RP

    SEMI  shift, and go to state 94


State 86

   48 CONDITION: EXP .

    $default  reduce using rule 48 (CONDITION)


State 87

   38 BODY: CLP STMT_LIST CRP .

    $default  reduce using rule 38 (BODY)


State 88

   37 LOOP: WHILE LP EXP RP BODY .

    $default  reduce using rule 37 (LOOP)


State 89

   35 PARAM_WO_DATATYPE: ID COMMA PARAM_WO_DATATYPE .

    $default  reduce using rule 35 (PARAM_WO_DATATYPE)


State 90

   29 FUNC_CALL: ID LP PARAM_LIST_WO_DATATYPE RP SEMI .

    $default  reduce using rule 29 (FUNC_CALL)


State 91

   31 PARAM_LIST_WO_DATATYPE: PARAM_WO_DATATYPE COMMA PARAM_LIST_WO_DATATYPE .

    $default  reduce using rule 31 (PARAM_LIST_WO_DATATYPE)


State 92

   42 COMMA_SEP_INIT: ID ASSIGN EXP COMMA . COMMA_SEP_INIT

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    VOID   shift, and go to state 3
    ID     shift, and go to state 61

    $default  reduce using rule 41 (COMMA_SEP_INIT)

    DATA_TYPE                go to state 62
    COMMA_SEP_INIT           go to state 95
    COMMA_SEP_DATATYPE_INIT  go to state 64


State 93

   46 COMMA_SEP_INIT_PRIME: ID ASSIGN EXP . COMMA COMMA_SEP_INIT_PRIME
   47                     | ID ASSIGN EXP .

    COMMA  shift, and go to state 96

    $default  reduce using rule 47 (COMMA_SEP_INIT_PRIME)


State 94

   40 FORLOOP: LP COMMA_SEP_INIT SEMI CONDITION SEMI . COMMA_SEP_INCR RP

    ADD    shift, and go to state 97
    MINUS  shift, and go to state 98
    ID     shift, and go to state 99

    COMMA_SEP_INCR  go to state 100


State 95

   42 COMMA_SEP_INIT: ID ASSIGN EXP COMMA COMMA_SEP_INIT .

    $default  reduce using rule 42 (COMMA_SEP_INIT)


State 96

   46 COMMA_SEP_INIT_PRIME: ID ASSIGN EXP COMMA . COMMA_SEP_INIT_PRIME

    ID  shift, and go to state 75

    COMMA_SEP_INIT_PRIME  go to state 101


State 97

   49 COMMA_SEP_INCR: ADD . ADD ID

    ADD  shift, and go to state 102


State 98

   50 COMMA_SEP_INCR: MINUS . MINUS ID

    MINUS  shift, and go to state 103


State 99

   51 COMMA_SEP_INCR: ID . ADD ADD
   52               | ID . MINUS MINUS
   53               | ID . ASSIGN EXP
   54               | ID . OTHER ASSIGN EXP

    ASSIGN  shift, and go to state 104
    ADD     shift, and go to state 105
    MINUS   shift, and go to state 106
    MUL     shift, and go to state 107
    DIV     shift, and go to state 108
    MOD     shift, and go to state 109
    BITAND  shift, and go to state 110
    BITOR   shift, and go to state 111
    BITXOR  shift, and go to state 112

    OTHER  go to state 113


State 100

   40 FORLOOP: LP COMMA_SEP_INIT SEMI CONDITION SEMI COMMA_SEP_INCR . RP

    RP  shift, and go to state 114


State 101

   46 COMMA_SEP_INIT_PRIME: ID ASSIGN EXP COMMA COMMA_SEP_INIT_PRIME .

    $default  reduce using rule 46 (COMMA_SEP_INIT_PRIME)


State 102

   49 COMMA_SEP_INCR: ADD ADD . ID

    ID  shift, and go to state 115


State 103

   50 COMMA_SEP_INCR: MINUS MINUS . ID

    ID  shift, and go to state 116


State 104

   53 COMMA_SEP_INCR: ID ASSIGN . EXP

    QUOTE  shift, and go to state 32
    NUM    shift, and go to state 33
    ID     shift, and go to state 68

    EXP          go to state 117
    CONST_OR_ID  go to state 70


State 105

   51 COMMA_SEP_INCR: ID ADD . ADD
   56 OTHER: ADD .

    ADD  shift, and go to state 118

    $default  reduce using rule 56 (OTHER)


State 106

   52 COMMA_SEP_INCR: ID MINUS . MINUS
   57 OTHER: MINUS .

    MINUS  shift, and go to state 119

    $default  reduce using rule 57 (OTHER)


State 107

   58 OTHER: MUL .

    $default  reduce using rule 58 (OTHER)


State 108

   59 OTHER: DIV .

    $default  reduce using rule 59 (OTHER)


State 109

   55 OTHER: MOD .

    $default  reduce using rule 55 (OTHER)


State 110

   60 OTHER: BITAND .

    $default  reduce using rule 60 (OTHER)


State 111

   61 OTHER: BITOR .

    $default  reduce using rule 61 (OTHER)


State 112

   62 OTHER: BITXOR .

    $default  reduce using rule 62 (OTHER)


State 113

   54 COMMA_SEP_INCR: ID OTHER . ASSIGN EXP

    ASSIGN  shift, and go to state 120


State 114

   40 FORLOOP: LP COMMA_SEP_INIT SEMI CONDITION SEMI COMMA_SEP_INCR RP .

    $default  reduce using rule 40 (FORLOOP)


State 115

   49 COMMA_SEP_INCR: ADD ADD ID .

    $default  reduce using rule 49 (COMMA_SEP_INCR)


State 116

   50 COMMA_SEP_INCR: MINUS MINUS ID .

    $default  reduce using rule 50 (COMMA_SEP_INCR)


State 117

   53 COMMA_SEP_INCR: ID ASSIGN EXP .

    $default  reduce using rule 53 (COMMA_SEP_INCR)


State 118

   51 COMMA_SEP_INCR: ID ADD ADD .

    $default  reduce using rule 51 (COMMA_SEP_INCR)


State 119

   52 COMMA_SEP_INCR: ID MINUS MINUS .

    $default  reduce using rule 52 (COMMA_SEP_INCR)


State 120

   54 COMMA_SEP_INCR: ID OTHER ASSIGN . EXP

    QUOTE  shift, and go to state 32
    NUM    shift, and go to state 33
    ID     shift, and go to state 68

    EXP          go to state 121
    CONST_OR_ID  go to state 70


State 121

   54 COMMA_SEP_INCR: ID OTHER ASSIGN EXP .

    $default  reduce using rule 54 (COMMA_SEP_INCR)
